///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ClcikIntroTab recording.
    /// </summary>
    [TestModule("29ff0982-75d1-414c-8aff-b3069750cfd2", ModuleType.Recording, 1)]
    public partial class ClcikIntroTab : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTestRepository repository.
        /// </summary>
        public static MyTestRepository repo = MyTestRepository.Instance;

        static ClcikIntroTab instance = new ClcikIntroTab();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ClcikIntroTab()
        {
            AddEntry = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ClcikIntroTab Instance
        {
            get { return instance; }
        }

#region Variables

        string _AddEntry;

        /// <summary>
        /// Gets or sets the value of variable AddEntry.
        /// </summary>
        [TestVariable("05c4ee1b-4927-46c0-a155-eaf388009207")]
        public string AddEntry
        {
            get { return _AddEntry; }
            set { _AddEntry = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RxMainFrame.BtnAddPerson' at 85;10.", repo.RxMainFrame.BtnAddPersonInfo, new RecordItemIndex(0));
            //repo.RxMainFrame.BtnAddPerson.Click("85;10");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'RxMainFrame.BtnAddPerson'.", repo.RxMainFrame.BtnAddPersonInfo, new RecordItemIndex(1));
            repo.RxMainFrame.BtnAddPerson.Element.InvokeActionWithText("PerformClick");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
